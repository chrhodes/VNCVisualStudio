<vncmvvm:ViewBase
    x:Class="$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views.$xxxTYPExxx$DetailMVC"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"

    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxre="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
    xmlns:views="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views"
    xmlns:viewModels="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.ViewModels"

    xmlns:vnccore="clr-namespace:VNC.Core;assembly=VNC.Core"
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:vncwpf="clr-namespace:VNC.WPF.Presentation;assembly=VNC.WPF.Presentation"
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation"

    xmlns:core="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core;assembly=$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core"

    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource StepCBackground}"

    d:DesignWidth="800" d:DesignHeight="450"
    d:DesignStyle="{StaticResource vncDesignStyleUC}"
>
    <!--xmlns:converters="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Converters"-->

    <!-- Move this to Resources\Xaml\Display_StylesAndTemplates.xaml -->
    <!-- <SolidColorBrush x:Key="StepCBackground" Color="#00FF00" /> -->

    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <!-- <vncmvvm:ViewBase.Resources> -->
        <!-- <localc:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" /> -->
        <!-- <localc:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <localc:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsToStepCWrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplateStepC"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding XPath=@Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplateStepCX"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
    <!-- </vnccore:ViewBase.Resources> -->

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:StepCViewModel /> -->
    <!-- </UserControl.DataContext> -->

    <!-- Simple Layout using Grid -->

    <DockPanel>

        <StackPanel DockPanel.Dock="Bottom" Orientation="Vertical" VerticalAlignment="Center"
                    Visibility="{Binding DeveloperUIMode,
                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" >
            <!-- Use Visibility="{Binding DeveloperModeUI} to use ViewModel property -->

            <!-- This is useful for debugging V VM constructor issues -->

            <StackPanel Orientation="Horizontal">

                <StackPanel Orientation="Horizontal" Margin="5,0,5,0">
                    <Label Content="{Binding ElementName=thisControl, Path=ViewType}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0" >
                    <Label Content="V:" />
                    <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="5,0,5,0" >
                    <Label Content="VP:" />
                    <Label Content="{Binding ElementName=thisControl, Path=InstanceCountVP}" />
                </StackPanel>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0,5,0">
                <Label Content="{Binding ElementName=thisControl, Path=ViewModelType}" />
                <Label Content=" VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>

        </StackPanel>

        <!-- Second form uses CommandParameter -->
        <!--<dxlc:LayoutItem DockPanel.Dock="Left" VerticalAlignment="Center">
            <Button
                Command="{Binding BackCommand }"
                Content="{Binding BackContent, FallbackValue='Back' }"
                ToolTip="{Binding BackToolTip, FallbackValue='Back ToolTip' }" />
        </dxlc:LayoutItem>-->
        <dxlc:LayoutItem DockPanel.Dock="Left" VerticalAlignment="Center">
            <Button
                 Command="{Binding BackCommand}"
                 CommandParameter="uicatdetailb"
                 Content="{Binding BackContent, FallbackValue='Back' }"
                 ToolTip="{Binding BackToolTip, FallbackValue='Back ToolTip' }" />
                <!-- <Button.Background>  -->
                    <!-- <ImageBrush ImageSource="\Resources\Images\VNCDeveloperMotivation.png" /> -->
                <!-- </Button.Background> -->
        </dxlc:LayoutItem>

        <dxlc:LayoutItem DockPanel.Dock="Right" VerticalAlignment="Center">
            <Button
                 Command="{Binding NextCommand}"
                 CommandParameter="uicatdetaild"
                 Content="{Binding NextContent, FallbackValue='Next' }"
                 ToolTip="{Binding NextToolTip, FallbackValue='Next ToolTip' }" />
                 <!-- <Button.Background> -->
                     <!-- <ImageBrush ImageSource="\Resources\Images\VNCDeveloperMotivation.png" /> -->
                 <!-- </Button.Background> -->
        </dxlc:LayoutItem>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel>
                <TextBlock Text="Step C" FontSize="20"/>
                <TextBlock Text="{Binding Message}" />
                <Button Content="Say Hello"
                        Command="{Binding SayHelloCommand}" />
                <dxlc:LayoutItem Label="Step C Complete">
                    <dxe:CheckEdit x:Name="ceStepCComplete"
                        IsChecked="{Binding StepCComplete}"/>
                </dxlc:LayoutItem>
            </StackPanel>

        </Grid>

    </DockPanel>

</vncmvvm:ViewBase>