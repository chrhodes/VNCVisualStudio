<vnccore:ViewBase
    x:Class="$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views.UILaunchApproaches"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"

    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxre="http://schemas.devexpress.com/winfx/2008/xaml/richedit"

    xmlns:views="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views"
    xmlns:viewModels="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.ViewModels"

    xmlns:vnccore="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:vncwpf="clr-namespace:VNC.WPF.Presentation;assembly=VNC.WPF.Presentation"
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation" 

    xmlns:core="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core;assembly=$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core"

    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource UILaunchApproachesBackground}"

    d:DesignWidth="800" d:DesignHeight="450"
    d:DesignStyle="{StaticResource vncDesignStyleUC}"
>
    <!--xmlns:converters="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Converters"-->
    <!-- d:DesignWidth="800" d:DesignHeight="450" -->

    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <!-- <vnccore:ViewBase.Resources> -->
        <!-- <converters:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" /> -->
        <!-- <converters:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <converters:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsToUILaunchApproachesWrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplateUILaunchApproaches"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding XPath=@Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplateUILaunchApproachesX"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
    <!-- </vnccore:ViewBase.Resources> -->

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:UILaunchApproachesViewModel /> -->
    <!-- </UserControl.DataContext> -->

    <!-- Simple Layout using Grid -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel>
            <TextBlock Text="UILaunchApproaches" />
            <!-- <TextBlock Text="{Binding Message}" /> -->
            <Button Content="Say Hello"
                    Command="{Binding SayHelloCommand}" />

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding LaunchCylon1Command }"
                    Content="{Binding LaunchCylon1Content, FallbackValue='LaunchCylon1' }"
                    ToolTip="{Binding LaunchCylon1ToolTip, FallbackValue='LaunchCylon1 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding LaunchCylon2Command }"
                    Content="{Binding LaunchCylon2Content, FallbackValue='LaunchCylon2' }"
                    ToolTip="{Binding LaunchCylon2ToolTip, FallbackValue='LaunchCylon2 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding ThemedWindowHostModelessCommand }"
                    Content="{Binding ThemedWindowHostModelessContent, FallbackValue='ThemedWindowHostModeless' }"
                    ToolTip="{Binding ThemedWindowHostModelessToolTip, FallbackValue='ThemedWindowHostModeless ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                Command="{Binding ThemedWindowHostModalCommand }"
                Content="{Binding ThemedWindowHostModalContent, FallbackValue='ThemedWindowHostModal' }"
                ToolTip="{Binding ThemedWindowHostModalToolTip, FallbackValue='ThemedWindowHostModal ToolTip' }" />
            </dxlc:LayoutItem>


            <dxlc:LayoutItem>
                <Button
                    Command="{Binding DXLayoutControlCommand }"
                    Content="{Binding DXLayoutControlContent, FallbackValue='DXLayoutControl' }"
                    ToolTip="{Binding DXLayoutControlToolTip, FallbackValue='DXLayoutControl ToolTip' }" />
            </dxlc:LayoutItem>


            <dxlc:LayoutItem>
                <Button
                    Command="{Binding DXDockLayoutControlCommand }"
                    Content="{Binding DXDockLayoutControlContent, FallbackValue='DXDockLayoutControl' }"
                    ToolTip="{Binding DXDockLayoutControlToolTip, FallbackValue='DXDockLayoutControl ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding DXDockLayoutManagerCommand }"
                    Content="{Binding DXDockLayoutManagerContent, FallbackValue='DXDockLayoutManager' }"
                    ToolTip="{Binding DXDockLayoutManagerToolTip, FallbackValue='DXDockLayoutManager ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM1Command }"
                    Content="{Binding MVVM1Content, FallbackValue='MVVM1' }"
                    ToolTip="{Binding MVVM1ToolTip, FallbackValue='MVVM1 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM2Command }"
                    Content="{Binding MVVM2Content, FallbackValue='MVVM2' }"
                    ToolTip="{Binding MVVM2ToolTip, FallbackValue='MVVM2 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM3Command }"
                    Content="{Binding MVVM3Content, FallbackValue='MVVM3' }"
                    ToolTip="{Binding MVVM3ToolTip, FallbackValue='MVVM3 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM4Command }"
                    Content="{Binding MVVM4Content, FallbackValue='MVVM4' }"
                    ToolTip="{Binding MVVM4ToolTip, FallbackValue='MVVM4 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM5Command }"
                    Content="{Binding MVVM5Content, FallbackValue='MVVM5' }"
                    ToolTip="{Binding MVVM5ToolTip, FallbackValue='MVVM5 ToolTip' }" />
            </dxlc:LayoutItem>

            <dxlc:LayoutItem>
                <Button
                    Command="{Binding MVVM6Command }"
                    Content="{Binding MVVM6Content, FallbackValue='MVVM6' }"
                    ToolTip="{Binding MVVM6ToolTip, FallbackValue='MVVM6 ToolTip' }" />
            </dxlc:LayoutItem>

        </StackPanel>

        <!-- This is useful for debugging V VM constructor issues -->

        <StackPanel Grid.Row="1" Orientation="Horizontal"
            Visibility="{Binding DeveloperUIMode, 
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" >
            <!-- Use Visibility="{Binding DeveloperModeUI} to use ViewModel property -->
            <!-- This is useful for debugging V VM constructor issues -->
            
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="V:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VP:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountVP}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>
            
        </StackPanel>

    </Grid>

    <!-- Using Prism Regions -->

    <!-- <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.<RegionName>}"/> -->

    <!-- Simple Layout using DevExpress LayoutGroup
        May need to add dxXMLNS -->

    <!-- <dxlc:LayoutGroup View="Group" Orientation="Vertical" HorizontalAlignment="Left" > -->

        <!-- <dxlc:LayoutItem Label="Item X"> -->

        <!-- </dxlc:LayoutItem> -->

        <!-- <dxlc:LayoutGroup View="Group" Orientation="Horizontal" HorizontalAlignment="Left" > -->

            <!-- <StackPanel> -->
            <!-- <TextBlock Text="HostSelector" /> -->
            <!-- <TextBlock Text="{Binding Message}" /> -->
            <!-- <Button Content="Say Hello" -->
            <!-- Command="{Binding SayHelloCommand}" /> -->
            <!-- </StackPanel> -->

        <!-- </dxlc:LayoutGroup> -->

    <!-- </dxlc:LayoutGroup> -->

    <!-- Simple Layout using DevExpress LayoutControl
         May need to add dxXMLNS -->

    <!-- <DockPanel Margin="5"> -->
        <!-- <TextBlock Text="InterfaceKit" DockPanel.Dock="Top" /> -->

        <!-- This is useful for debugging V VM constructor issues -->

        <!-- <DockPanel DockPanel.Dock="Bottom" > -->

            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="5"> -->
                <!-- <Label Content="Message:" /> -->
                <!-- <Label Content="{Binding Message}" /> -->
            <!-- </StackPanel> -->

            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="5"> -->
                <!-- <Label Content="V:" /> -->
                <!-- <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" /> -->
            <!-- </StackPanel> -->
            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="5"> -->
                <!-- <Label Content="VM:" /> -->
                <!-- <Label Content="{Binding InstanceCountVM}" /> -->
            <!-- </StackPanel> -->

        <!-- </DockPanel> -->

        <!-- <dxlc:LayoutControl Orientation="Vertical"> -->

            <!-- <dxlc:LayoutItem Label="Item X"> -->

            <!-- </dxlc:LayoutItem> -->

            <!-- <dxlc:LayoutGroup View="Group" Orientation="Horizontal" HorizontalAlignment="Left" > -->

                <!-- <StackPanel> -->
                    <!-- <TextBlock Text="UILaunchApproaches" /> -->
                    <!-- <TextBlock Text="{Binding Message}" /> -->
                    <!-- <Button Content="Say Hello" -->
                            <!-- Command="{Binding SayHelloCommand}" /> -->
                <!-- </StackPanel> -->

            <!-- </dxlc:LayoutGroup> -->

        <!-- </dxlc:LayoutControl> -->

    <!-- </DockPanel> -->

</vnccore:ViewBase>