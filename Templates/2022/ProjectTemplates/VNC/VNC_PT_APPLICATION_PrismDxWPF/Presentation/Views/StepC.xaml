<vncmvvm:ViewBase
    x:Class="$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views.StepC"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"

    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxre="http://schemas.devexpress.com/winfx/2008/xaml/richedit"

    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:i1="http://schemas.microsoft.com/xaml/behaviors"

    xmlns:controls="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Controls"

    xmlns:views="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views"
    xmlns:viewModels="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.ViewModels"

    xmlns:vnccore="clr-namespace:VNC.Core;assembly=VNC.Core"
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:vncviews="clr-namespace:VNC.WPF.Presentation.Views;assembly=VNC.WPF.Presentation"
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation"

    xmlns:core="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core;assembly=$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core"

    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource StepCBackground}"

    d:DesignWidth="800" d:DesignHeight="450"
    d:DesignStyle="{StaticResource vncDesignStyleUC}"

    SizeChanged="thisControl_SizeChanged"
>
    <!--xmlns:converters="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Converters"-->

    <!-- Move this to Resources\Xaml\Display_StylesAndTemplates.xaml -->
    <!-- <SolidColorBrush x:Key="StepCBackground" Color="#00FF00" /> -->

    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <vncmvvm:ViewBase.Resources>
        <Style x:Key="xLabel" TargetType="Label">
            <Setter Property="Margin"  Value="0" />
        </Style>
        <Style x:Key="xTextBox" TargetType="TextBox">
            <Setter Property="Margin"  Value="5 0" />
        </Style>
        <!-- <localc:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" /> -->
        <!-- <localc:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <localc:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsToStepCWrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplateStepC"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding XPath=@Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplateStepCX"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
    </vncmvvm:ViewBase.Resources>

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:StepCViewModel /> -->
    <!-- </UserControl.DataContext> -->

    <!-- Simple Layout using Grid -->

    <DockPanel>

        <controls:DeveloperUIInfo x:Name="spDeveloperInfo" DockPanel.Dock="Bottom"/>

        <!-- Second form uses CommandParameter -->

        <!--<dxlc:LayoutItem DockPanel.Dock="Left" VerticalAlignment="Center">
            <Button
                Command="{Binding BackCommand }"
                Content="{Binding BackContent, FallbackValue='Back' }"
                ToolTip="{Binding BackToolTip, FallbackValue='Back ToolTip' }" />
        </dxlc:LayoutItem>-->

        <dxlc:LayoutItem DockPanel.Dock="Left" VerticalAlignment="Center">
            <Button
                 Command="{Binding BackCommand}"
                 CommandParameter="uistepb"
                 Content="{Binding BackContent, FallbackValue='Back' }"
                 ToolTip="{Binding BackToolTip, FallbackValue='Back ToolTip' }" />
                <!-- <Button.Background>  -->
                    <!-- <ImageBrush ImageSource="\Resources\Images\VNCDeveloperMotivation.png" /> -->
                <!-- </Button.Background> -->
        </dxlc:LayoutItem>

        <dxlc:LayoutItem DockPanel.Dock="Right" VerticalAlignment="Center">
            <Button
                 Command="{Binding NextCommand}"
                 CommandParameter="uistepd"
                 Content="{Binding NextContent, FallbackValue='Next' }"
                 ToolTip="{Binding NextToolTip, FallbackValue='Next ToolTip' }" />
                 <!-- <Button.Background> -->
                     <!-- <ImageBrush ImageSource="\Resources\Images\VNCDeveloperMotivation.png" /> -->
                 <!-- </Button.Background> -->
        </dxlc:LayoutItem>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel>
                <TextBlock Text="Step C" FontSize="20"/>
                <TextBlock Text="{Binding Message}" />
                <Button Content="Say Hello"
                        Command="{Binding SayHelloCommand}" />

                <dxlc:LayoutItem Label="FirstName">
                <!-- Hopefully we don't use the first one anymore!
                    <dxe:TextEdit x:Name="teFirstName"
                        Text="{Binding FirstName}"
                        ToolTip="tooltip"
                        MouseDoubleClick="teFirstName_MouseDoubleClick" />
                -->
                    <dxe:TextEdit
                        Text="{Binding FirstName }"
                        ToolTip="{Binding FirstNameToolTip }">
                        <i1:Interaction.Triggers>
                            <i1:EventTrigger EventName="MouseDoubleClick">
                                <prism:InvokeCommandAction Command="{Binding Path=FirstName_DoubleClick_Command}"/>
                             </i1:EventTrigger>
                        </i1:Interaction.Triggers>
                    </dxe:TextEdit>
                </dxlc:LayoutItem>
                <dxlc:LayoutItem Label="Step C Complete">
                    <dxe:CheckEdit x:Name="ceStepCComplete"
                        IsChecked="{Binding StepCComplete}"/>
                </dxlc:LayoutItem>
            </StackPanel>

        </Grid>

    </DockPanel>

</vncmvvm:ViewBase>