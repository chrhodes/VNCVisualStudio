<vnccore:ViewBase
    x:Class="$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views.CombinedMain"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"

    xmlns:views="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views"
    xmlns:viewModels="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.ViewModels"

    xmlns:vnccore="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:vncwpf="clr-namespace:VNC.WPF.Presentation;assembly=VNC.WPF.Presentation"
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation" 

    xmlns:core="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core;assembly=$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core"

    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource CombinedMainBackground}"

    d:DesignWidth="800" d:DesignHeight="450" 
    d:DesignStyle="{StaticResource vncDesignStyleUC}"
>
    <!--xmlns:converters="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Converters"-->
    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->
    
    <!-- d:DesignWidth="400" d:DesignHeight="400" -->

    <UserControl.Resources>

        <!-- These are implicit DataTemplates -->
        <DataTemplate DataType="{x:Type viewModels:$xxxTYPExxx$DetailViewModel}">
            <views:$xxxTYPExxx$Detail />
        </DataTemplate>

        <!-- <DataTemplate DataType="{x:Type viewModels:TYPEDetailViewModel}"> -->
            <!-- <views:TYPEDetail /> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate DataType="{x:Type viewModels:ITEMDetailViewModel}"> -->
            <!-- <views:MeetingDetail /> -->
        <!-- </DataTemplate> -->

        <DataTemplate DataType="{x:Type viewModels:$xxxITEMxxx$DetailViewModel}">
            <views:$xxxITEMxxx$Detail />
        </DataTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Menu Grid.ColumnSpan="2" FontSize="16">
            <MenuItem Header="Create">
                <MenuItem Header="Add $xxxTYPExxx$" Command="{Binding CreateNewDetailCommand}"
                          CommandParameter="{x:Type viewModels:$xxxTYPExxx$DetailViewModel}" />
                <!-- <MenuItem Header="Add TYPE" Command="{Binding CreateNewDetailCommand}" -->
                          <!-- CommandParameter="{x:Type viewModels:TYPEDetailViewModel}" /> -->
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="$xxxITEMxxx$"
                            Command="{Binding OpenSingleDetailViewCommand}"
                            CommandParameter="{x:Type viewModels:$xxxITEMxxx$DetailViewModel}" />
            </MenuItem>
        </Menu>

        <ContentControl Grid.Row="1" Grid.Column="0"
                        prism:RegionManager.RegionName="{x:Static core:RegionNames.CombinedNavigationRegion}"
                        DataContext="{Binding NavigationViewModel}" />

        <TabControl Grid.Row="1" Grid.Column="1"
                    ItemsSource="{Binding DetailViewModels}"
                    SelectedItem="{Binding SelectedDetailViewModel, Mode=TwoWay}">
            <TabControl.ItemTemplate>

                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" />
                        <TextBlock Text="*" Visibility="{Binding HasChanges,
                            Converter={StaticResource booleanToVisibilityConverter}}" />
                        <Button Command="{Binding CloseDetailViewCommand}"
                                Content="x" Style="{StaticResource CloseTabButtonStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>

        <StackPanel Grid.Row="2"  Orientation="Horizontal"
                Visibility="{Binding DeveloperUIMode, 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" >
            <!-- Use Visibility="{Binding DeveloperModeUI} to use ViewModel property -->

            <!-- This is useful for debugging V VM constructor issues -->

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="V:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VP:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountVP}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>

        </StackPanel>
        
    </Grid>
    
</vnccore:ViewBase>