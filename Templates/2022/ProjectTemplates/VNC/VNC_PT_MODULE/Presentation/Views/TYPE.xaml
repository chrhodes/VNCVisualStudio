<vnccore:ViewBase
    x:Class="$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views.$xxxTYPExxx$"
    x:Name="thisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"

    xmlns:views="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Views"
    xmlns:viewModels="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.ViewModels"

    xmlns:vnccore="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:vncwpf="clr-namespace:VNC.WPF.Presentation;assembly=VNC.WPF.Presentation"
    xmlns:vncconverters="clr-namespace:VNC.WPF.Presentation.Converters;assembly=VNC.WPF.Presentation" 

    xmlns:core="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core;assembly=$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Core"

    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="False"

    Background="{StaticResource $xxxTYPExxx$Background}"

    d:DesignWidth="800" d:DesignHeight="450"
    d:DesignStyle="{StaticResource vncDesignStyleUC}"
>
    <!--xmlns:converters="clr-namespace:$xxxAPPLICATIONxxx$$xxxNAMESPACExxx$.Presentation.Converters"-->
    <!-- <d:DesignerProperties.DesignStyle> -->
        <!-- <Style TargetType="UserControl"> -->
            <!-- <Setter Property="Background" Value="White" /> -->
        <!-- </Style> -->
    <!-- </d:DesignerProperties.DesignStyle> -->

    <!-- <vnccore:ViewBase.Resources> -->
        <!-- <localc:SelectedItemsToListOfStringConverter x:Key="SelectedItemsToListOfStringConverter" /> -->
        <!-- <localc:SelectedItemsConverter x:Key="SelectedItemsConverter" /> -->
        <!-- <localc:SelectedItemsToWorkItemQueryWrapperConverter x:Key="SelectedItemsTo$xxxTYPExxx$WrapperConverter" /> -->
        <!-- <DataTemplate x:Key="dataTemplate$xxxTYPExxx$"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding XPath=@Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->

        <!-- <DataTemplate x:Key="dataTemplate$xxxTYPExxx$X"> -->
            <!-- <StackPanel> -->
                <!-- <Label Content="{Binding Name}" /> -->
            <!-- </StackPanel> -->
        <!-- </DataTemplate> -->
    <!-- </vnccore:ViewBase.Resources> -->

    <!-- Can declare ViewModel in Xaml -->
    <!-- <UserControl.DataContext> -->
        <!-- <localvm:$xxxTYPExxx$ViewModel /> -->
    <!-- </UserControl.DataContext> -->

    <!-- Simple Layout using Grid -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel>
            <TextBlock Text="$xxxTYPExxx$" />
            <TextBlock Text="{Binding Message}" />
            <Button Content="Say Hello"
                    Command="{Binding SayHelloCommand}" />
        </StackPanel>

        <StackPanel Grid.Row="1"  Orientation="Horizontal"
                Visibility="{Binding DeveloperUIMode, 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" >
            <!-- Use Visibility="{Binding DeveloperModeUI} to use ViewModel property -->

            <!-- This is useful for debugging V VM constructor issues -->

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="V:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VP:" />
                <Label Content="{Binding ElementName=thisControl, Path=InstanceCountVP}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>

        </StackPanel>

    </Grid>
    
    <!-- Using Prism Regions -->
    
    <!-- <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.<RegionName>}"/> -->
    
    <!-- Simple Layout using DevExpress LayoutGroup
        May need to add dxXMLNS -->

    <!-- <dxlc:LayoutGroup View="Group" Orientation="Vertical" HorizontalAlignment="Left" > -->

        <!-- <dxlc:LayoutItem Label="Item X"> -->

        <!-- </dxlc:LayoutItem> -->

        <!-- <dxlc:LayoutGroup View="Group" Orientation="Horizontal" HorizontalAlignment="Left" > -->

            <!-- <StackPanel> -->
            <!-- <TextBlock Text="HostSelector" /> -->
            <!-- <TextBlock Text="{Binding Message}" /> -->
            <!-- <Button Content="Say Hello" -->
            <!-- Command="{Binding SayHelloCommand}" /> -->
            <!-- </StackPanel> -->

        <!-- </dxlc:LayoutGroup> -->
        
    <!-- </dxlc:LayoutGroup> -->
    
    <!-- Simple Layout using DevExpress LayoutControl
         May need to add dxXMLNS -->
    
    <!-- <DockPanel Margin="5"> -->
        <!-- <TextBlock Text="InterfaceKit" DockPanel.Dock="Top" /> -->

        <!-- This is useful for debugging V VM constructor issues -->

        <!-- <DockPanel DockPanel.Dock="Bottom" > -->

            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="5"> -->
                <!-- <Label Content="Message:" /> -->
                <!-- <Label Content="{Binding Message}" /> -->
            <!-- </StackPanel> -->

            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="5"> -->
                <!-- <Label Content="V:" /> -->
                <!-- <Label Content="{Binding ElementName=thisControl, Path=InstanceCountV}" /> -->
            <!-- </StackPanel> -->
            <!-- <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="5"> -->
                <!-- <Label Content="VM:" /> -->
                <!-- <Label Content="{Binding InstanceCountVM}" /> -->
            <!-- </StackPanel> -->

        <!-- </DockPanel> -->

        <!-- <dxlc:LayoutControl Orientation="Vertical"> -->

            <!-- <dxlc:LayoutItem Label="Item X"> -->

            <!-- </dxlc:LayoutItem> -->

            <!-- <dxlc:LayoutGroup View="Group" Orientation="Horizontal" HorizontalAlignment="Left" > -->

                <!-- <StackPanel> -->
                    <!-- <TextBlock Text="$xxxTYPExxx$" /> -->
                    <!-- <TextBlock Text="{Binding Message}" /> -->
                    <!-- <Button Content="Say Hello" -->
                            <!-- Command="{Binding SayHelloCommand}" /> -->
                <!-- </StackPanel> -->
                
            <!-- </dxlc:LayoutGroup> -->

        <!-- </dxlc:LayoutControl> -->

    <!-- </DockPanel> -->

</vnccore:ViewBase>